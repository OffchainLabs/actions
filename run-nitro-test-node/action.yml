name: Run Nitro Test Node
description: "Checks out the Nitro repository and runs the local test node setup"
inputs:
  no-token-bridge:
    required: false
    default: "false"
    description: "Whether to skip deploying the token bridge on the test node"
  no-l3-token-bridge:
    required: false
    default: "false"
    description: "Whether to skip deploying the L3 token bridge on the test node"
  no-simple:
    required: false
    default: "true"
    description: "Whether to start the test node in simple mode"
  args:
    required: false
    default: ""
    description: "Additional args that can be supplied to the test node script"
  nitro-testnode-ref:
    required: false
    default: "release"
    description: "The nitro-testnode branch to use"
  l3-node:
    required: false
    default: "false"
    description: "Whether to start an L3 node in addition to the L2 node"
  nitro-contracts-branch:
    required: false
    description: "The nitro-contracts branch to use"
  token-bridge-branch:
    required: false
    description: "The token-bridge-contracts branch to use"
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: OffchainLabs/nitro-testnode
        submodules: true
        path: "nitro-testnode"
        ref: ${{ inputs.nitro-testnode-ref }}

    - name: Start nitro-testnode
      shell: bash
      run: |
        cd nitro-testnode

        if [ -n "${{ inputs.nitro-contracts-branch }}" ]; then
          export NITRO_CONTRACTS_BRANCH="${{ inputs.nitro-contracts-branch }}"
        fi
        if [ -n "${{ inputs.token-bridge-branch }}" ]; then
          export TOKEN_BRIDGE_BRANCH="${{ inputs.token-bridge-branch }}"
        fi

        ./test-node.bash --init ${{ inputs.no-simple == 'true' && '--no-simple' || '' }} \
          ${{ inputs.l3-node == 'true' && '--l3node' || '' }} \
          ${{ inputs.no-token-bridge == 'true' && '--no-tokenbridge' || '--tokenbridge' }} \
          ${{ inputs.l3-node == 'true' && inputs.no-l3-token-bridge != 'true' && '--l3-token-bridge' || '' }} \
          ${{ inputs.args }} &

    - name: Wait for nitro-testnode container creation
      shell: bash
      run: |
        echo "Waiting for nitro-testnode container to start..."
        while [ -z "$(docker ps -a -q -f name=nitro-testnode)" ]; do
          sleep 3
        done
        echo "nitro-testnode container started or exists."

    - name: Stream nitro-testnode logs (in the background)
      shell: bash
      run: |
        sleep 5  # Short delay to ensure the container is fully up
        docker logs -f nitro-testnode &  # Run logs in the background

    - name: Capture Docker events for debugging
      shell: bash
      run: |
        docker events --filter container=nitro-testnode --filter event=start --filter event=die --filter event=stop --filter event=destroy --filter event=kill &

    - name: List all containers (before Nitro setup)
      shell: bash
      run: |
        echo "Listing all Docker containers (before setup):"
        docker ps -a

    - name: Get logs of exited containers
      shell: bash
      run: |
        echo "Fetching logs for nitro-testnode-geth-1"
        docker logs nitro-testnode-geth-1 || true
        echo "Fetching logs for nitro-testnode-scripts"
        docker logs nitro-testnode-scripts || true

    - name: Wait for nitro startup
      shell: bash
      run: ${{ github.action_path }}/waitForNitro.sh 8547

    - name: Log out all container logs after Nitro startup
      shell: bash
      run: |
        echo "Logging all container logs..."
        containers=$(docker ps -a -q)
        for container in $containers; do
          echo "Logs for container ID: $container"
          docker logs $container || true
        done

    - name: Wait for L3 startup
      if: ${{ inputs.l3-node == 'true' }}
      shell: bash
      run: ${{ github.action_path }}/waitForNitro.sh 3347

    - name: Wait for token bridge deployment
      if: ${{ inputs.no-token-bridge != 'true' }}
      shell: bash
      run: ${{ github.action_path }}/waitForTokenBridge.sh localNetwork.json

    - name: List all containers (after Nitro setup)
      shell: bash
      run: |
        echo "Listing all Docker containers (after setup):"
        docker ps -a
    - name: Wait for token bridge deployment
      if: ${{ inputs.l3-node == 'true' && inputs.no-l3-token-bridge != 'true' }}
      shell: bash
      run: ${{ github.action_path }}/waitForTokenBridge.sh l2l3_network.json
